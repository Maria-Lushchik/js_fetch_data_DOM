{"version":3,"sources":["scripts/main.js"],"names":["listURL","detailsURL","list","document","createElement","getPhones","fetch","then","response","ok","json","setTimeout","Error","status","statusText","getPhonesDetails","phoneID","phones","phonesList","map","phone","id","Promise","all","phoneData","forEach","phoneLi","innerHTML","name","appendChild","catch","error","body"],"mappings":";AAAA,aAEA,IAAMA,EAAU,wEACVC,EAAa,oEACbC,EAAOC,SAASC,cAAc,MAE9BC,EAAY,WACTC,OAAAA,MAAMN,GACVO,KAAK,SAAAC,GACD,OAACA,EAASC,GAMND,EAASE,OALPC,WAAW,WACV,MAAA,IAAIC,MAASJ,GAAAA,OAAAA,EAASK,OAAWL,MAAAA,OAAAA,EAASM,cAC/C,QAOLC,EAAmB,SAACC,GACjBV,OAAAA,MAASL,GAAAA,OAAAA,GAAae,OAAAA,EAAtB,UACJT,KAAK,SAAAC,GACD,IAACA,EAASC,GACL,MAAA,IAAIG,MAASJ,GAAAA,OAAAA,EAASK,OAAWL,MAAAA,OAAAA,EAASM,aAG3CN,OAAAA,EAASE,UAItBL,IACGE,KAAK,SAAAU,GACEC,IAAAA,EAAaD,EAAOE,IAAI,SAAAC,GAASL,OAAAA,EAAiBK,EAAMC,MAE9DC,QAAQC,IAAIL,GACTX,KAAK,SAAAiB,GACJA,EAAUC,QAAQ,SAAAL,GACVM,IAAAA,EAAUvB,SAASC,cAAc,MAEvCsB,EAAQC,UAAYP,EAAMQ,KAE1B1B,EAAK2B,YAAYH,SAIxBI,MAAM,SAAAC,GACC,MAAA,IAAInB,MAAMmB,KAGpB5B,SAAS6B,KAAKH,YAAY3B","file":"main.1d0dd71e.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst listURL = 'https://mate-academy.github.io/phone-catalogue-static/api/phones.json';\nconst detailsURL = 'https://mate-academy.github.io/phone-catalogue-static/api/phones/';\nconst list = document.createElement('ul');\n\nconst getPhones = () => {\n  return fetch(listURL)\n    .then(response => {\n      if(!response.ok) {\n        return setTimeout(() => {\n          throw new Error(`${response.status}: ${response.statusText}`);\n        }, 5000);\n      }\n\n      return response.json();\n    });\n};\n\nconst getPhonesDetails = (phoneID) => {\n  return fetch(`${detailsURL}${phoneID}.json`)\n    .then(response => {\n      if(!response.ok) {\n        throw new Error(`${response.status}: ${response.statusText}`);\n      }\n\n      return response.json();\n  });\n};\n\ngetPhones()\n  .then(phones => {\n    const phonesList = phones.map(phone => getPhonesDetails(phone.id));\n\n    Promise.all(phonesList)\n      .then(phoneData => {\n        phoneData.forEach(phone => {\n          const phoneLi = document.createElement('li');\n\n          phoneLi.innerHTML = phone.name;\n\n          list.appendChild(phoneLi);\n        });\n      })\n  })\n  .catch(error => {\n    throw new Error(error);\n  });\n\ndocument.body.appendChild(list);\n"]}